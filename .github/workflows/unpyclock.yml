name: Build unpyclock

on:
  push:
    paths:
    - 'app_python/**'
    - '.github/workflows/unpyclock.yml'
  pull_request:
    paths:
    - 'app_python/**'
    - '.github/workflows/unpyclock.yml'

env:
  PYTHON_VERSION: "3.11"


jobs:
  lint:
    timeout-minutes: 30
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - uses: chartboost/ruff-action@v1

  test:
    timeout-minutes: 30
    defaults:
      run:
        working-directory: app_python
    strategy:
      matrix:
        os: [ubuntu-22.04, ubuntu-20.04]
    runs-on: ${{ matrix.os }}
    steps: 
      - uses: actions/checkout@v4.0.0
      - name: Set up Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v4
        with:
          python-version: 3.11
          cache: 'pip' 
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest
          [ -f requirements.txt ] && pip install -r requirements.txt

      - name: Test with pytest
        run: |
          pytest

  snyk-check:
    timeout-minutes: 30
    defaults:
      run:
        working-directory: app_python
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4.0.0
      - uses: snyk/actions/setup@master
      - name: Set up Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v4
        with:
          python-version: 3.11
          cache: 'pip'
      - name: Install Python dependencies
        run: |
          [ -f requirements.txt ] && 
          pip install -r requirements.txt && pip list
      - name: Run Snyk to check for vulnerabilities in dependencies
        run: |
          snyk test
# Code test was temporarily omited due to the troubles 
# with freezing runner on GitHub side
#      - name: Run Snyk to check for vulnerabilities in the code 
        #run: |
#          snyk code test
    env:
      SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}


  build_push:
    timeout-minutes: 30
    defaults:
      run:
        working-directory: app_python
    needs: [lint, test, snyk-check]
    runs-on: ubuntu-22.04
    steps:
        # Setting up Docker Buildx with docker-container driver is required
        # at the moment to be able to use a subdirectory with Git context
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.0.0

      - name: Login to Docker Hub
        uses: docker/login-action@v3.0.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

    
      - name: Build and push to the dockerhub
        uses: docker/build-push-action@v5.0.0
        with:
          push: true
          tags: "${{ secrets.DOCKERHUB_USERNAME }}/app_python:latest"
          context: "{{defaultContext}}:app_python"

